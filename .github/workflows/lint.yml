name: Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: shellcheck
        uses: reviewdog/action-shellcheck@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
          shellcheck_flags: --enable=all
          pattern: |
            custodian
            dns-updater
            event-emitter
            task-reaper
  shfmt:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: shfmt
        uses: reviewdog/action-shfmt@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          filter_mode: file
          shfmt_flags: -i 2
  golangci-lint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
  prettier:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: create package.json
        run: |
          echo -e '{"devDependencies": {"prettier": "^3.1.0"}}' > package.json
      - name: prettier
        uses: EPMatt/reviewdog-action-prettier@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
  misspell:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
          exclude: |
            ./.git/*
            ./.cache/*
  alex:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: alex
        uses: reviewdog/action-alex@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
          alex_flags: |
            * .github/* .github/workflows/*
  markdownlint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: markdownlint
        uses: reviewdog/action-markdownlint@v0
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
          markdownlint_flags: |
            --disable MD033 -- .
  hadolint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
  actionlint:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          github_token: ${{ github.token }}
          reporter: github-pr-review
          fail_on_error: "false"
          filter_mode: file
